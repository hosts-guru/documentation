@startuml update_room_cloud_workflow
footer  Hosts Guru\n  [[https://github.com/hosts-guru/documentation Hosts Guru Docs]]
skinparam {
    DefaultTextAlignment center
    SequenceMessageAlign first
    backgroundColor white
}

!define AWSPuml https://raw.githubusercontent.com/awslabs/aws-icons-for-plantuml/v10.0/dist
!includeurl AWSPuml/AWSSimplified.puml
!includeurl AWSPuml/General/User.puml
!includeurl AWSPuml/General/Internet.puml
!includeurl AWSPuml/Containers/EKSCloud.puml
!includeurl AWSPuml/ApplicationIntegration/SimpleQueueService.puml
!includeurl AWSPuml/ApplicationIntegration/SimpleNotificationServiceEmailNotification.puml
!includeurl AWSPuml/ApplicationIntegration/SimpleNotificationServiceHTTPNotification.puml
!includeurl AWSPuml/Database/DynamoDB.puml
!includeurl AWSPuml/Storage/SimpleStorageService.puml
!includeurl AWSPuml/Compute/Lambda.puml
!includeurl AWSPuml/Analytics/KinesisDataStreams.puml
!includeurl AWSPuml/SecurityIdentityCompliance/Cognito.puml


left to right direction

Cognito(cognitoAuthorization, "Cognito Auth", "")
EKSCloud(roomMicrosservice, "Rooms Microsservice", "")
User(hotelUser, "Hotel Administrator", "")
SimpleStorageService(roomsS3, "Rooms Storage", "")
SimpleQueueService(roomsSQS, "Rooms Queue", "")
DynamoDB(roomsDynamoDB, "Rooms Database", "")
Lambda(roomsLambdaIntegrity, "Rooms Integrity", "")
KinesisDataStreams(roomsKinesisDataStreams, "Rooms Data Streams", "")
Lambda(roomsLambdaNotifier, "Rooms Notifier", "")
Lambda(roomsLambdaIntegrator, "Rooms Integrator", "")
SimpleNotificationServiceHTTPNotification(roomsSNSHTTPNotifier, "Rooms HTTP Notifier", "")
SimpleNotificationServiceEmailNotification(roomsSNSEmailNotifier, "Rooms Email Notifier", "")
Internet(roomsExternalIntegrations, "External Integrations", "")


hotelUser-->roomMicrosservice: Send Payload to Update a Room
hotelUser<-->cognitoAuthorization: Request Access
roomMicrosservice-->roomsDynamoDB: Update Room into Rooms Database
roomMicrosservice-->roomsSQS: Send Message to Verification
roomMicrosservice-->roomsS3: Save Images into Storage
roomsSQS-->roomsLambdaIntegrity: Read Queue Messages
roomsS3<-->roomsLambdaIntegrity: Verify Images at Storage
roomsDynamoDB<-->roomsLambdaIntegrity: Verify Idempotency of the Room Updated
roomsLambdaIntegrity-->roomsKinesisDataStreams: Send to Event Stream
roomsKinesisDataStreams-->roomsLambdaNotifier: Read From Stream
roomsLambdaNotifier-->roomsSNSHTTPNotifier: Notify Client in App and Browser
roomsLambdaNotifier-->roomsSNSEmailNotifier: Notify Client in Email
roomsKinesisDataStreams-->roomsLambdaIntegrator: Read From Stream
roomsLambdaIntegrator-->roomsExternalIntegrations: Update Room at External Integrations

@enduml